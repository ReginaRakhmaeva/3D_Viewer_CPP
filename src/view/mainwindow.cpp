// MAINWINDOW.CPP - Реализация главного окна
//
// ЗАЧЕМ НУЖЕН:
// Реализует пользовательский интерфейс 3D Viewer. Создает все UI элементы,
// обрабатывает пользовательский ввод и отображает результаты. Строго следует
// принципам MVC - только UI, никакой бизнес-логики.
//
// ЧТО РЕАЛИЗУЕТ:
// - Создание UI элементов (кнопки, поля ввода, меню, панели инструментов)
// - Обработка событий UI (клики кнопок, ввод текста, изменение значений)
// - Отправка сигналов в Controller при действиях пользователя
// - Обновление UI при получении данных от Controller
// - Отображение информации о загруженной модели (файл, вершины, ребра)
// - Настройка Model виджета для 3D отображения
// - Обработка ошибок (показ сообщений пользователю через QMessageBox)
// - Настройки отображения (цвета, толщина линий, размер вершин)
//
// КАК РАБОТАЕТ:
// 1. Конструктор: создает все UI элементы, настраивает layout'ы
// 2. connectSignals(): связывает сигналы UI с слотами MainWindow
// 3. Обработчики событий: emit сигналы в Controller
// 4. Слоты обновления: получают данные от Controller и обновляют UI
// 5. Model виджет: отображает 3D модель через SceneDrawer
//
// UI ЭЛЕМЕНТЫ:
// - Меню: File (Open, Save, Exit), View (Settings), Help (About)
// - Панель инструментов: кнопки загрузки, трансформации, настроек
// - Центральная область: Model виджет для 3D модели
// - Панель трансформации: поля ввода для move/rotate/scale
// - Панель информации: данные о модели (файл, вершины, ребра)
// - Статусная строка: текущее состояние приложения
//
// ПРИНЦИПЫ MVC:
// - НИКАКОЙ бизнес-логики, только взаимодействие с UI
// - Только сигналы для отправки команд в Controller
// - Только слоты для получения данных от Controller
// - Отображение состояния модели без прямого доступа к данным
